package com.smile.sz.web.service.user.model.s61;

import java.util.ArrayList;
import java.util.List;

public class ActivityCoinExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public ActivityCoinExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andActivityidIsNull() {
            addCriterion("activityId is null");
            return (Criteria) this;
        }

        public Criteria andActivityidIsNotNull() {
            addCriterion("activityId is not null");
            return (Criteria) this;
        }

        public Criteria andActivityidEqualTo(Integer value) {
            addCriterion("activityId =", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotEqualTo(Integer value) {
            addCriterion("activityId <>", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidGreaterThan(Integer value) {
            addCriterion("activityId >", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidGreaterThanOrEqualTo(Integer value) {
            addCriterion("activityId >=", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidLessThan(Integer value) {
            addCriterion("activityId <", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidLessThanOrEqualTo(Integer value) {
            addCriterion("activityId <=", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidIn(List<Integer> values) {
            addCriterion("activityId in", values, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotIn(List<Integer> values) {
            addCriterion("activityId not in", values, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidBetween(Integer value1, Integer value2) {
            addCriterion("activityId between", value1, value2, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotBetween(Integer value1, Integer value2) {
            addCriterion("activityId not between", value1, value2, "activityid");
            return (Criteria) this;
        }

        public Criteria andPrizenameIsNull() {
            addCriterion("prizeName is null");
            return (Criteria) this;
        }

        public Criteria andPrizenameIsNotNull() {
            addCriterion("prizeName is not null");
            return (Criteria) this;
        }

        public Criteria andPrizenameEqualTo(String value) {
            addCriterion("prizeName =", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameNotEqualTo(String value) {
            addCriterion("prizeName <>", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameGreaterThan(String value) {
            addCriterion("prizeName >", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameGreaterThanOrEqualTo(String value) {
            addCriterion("prizeName >=", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameLessThan(String value) {
            addCriterion("prizeName <", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameLessThanOrEqualTo(String value) {
            addCriterion("prizeName <=", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameLike(String value) {
            addCriterion("prizeName like", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameNotLike(String value) {
            addCriterion("prizeName not like", value, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameIn(List<String> values) {
            addCriterion("prizeName in", values, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameNotIn(List<String> values) {
            addCriterion("prizeName not in", values, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameBetween(String value1, String value2) {
            addCriterion("prizeName between", value1, value2, "prizename");
            return (Criteria) this;
        }

        public Criteria andPrizenameNotBetween(String value1, String value2) {
            addCriterion("prizeName not between", value1, value2, "prizename");
            return (Criteria) this;
        }

        public Criteria andNeedcoinIsNull() {
            addCriterion("needCoin is null");
            return (Criteria) this;
        }

        public Criteria andNeedcoinIsNotNull() {
            addCriterion("needCoin is not null");
            return (Criteria) this;
        }

        public Criteria andNeedcoinEqualTo(Integer value) {
            addCriterion("needCoin =", value, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinNotEqualTo(Integer value) {
            addCriterion("needCoin <>", value, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinGreaterThan(Integer value) {
            addCriterion("needCoin >", value, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinGreaterThanOrEqualTo(Integer value) {
            addCriterion("needCoin >=", value, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinLessThan(Integer value) {
            addCriterion("needCoin <", value, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinLessThanOrEqualTo(Integer value) {
            addCriterion("needCoin <=", value, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinIn(List<Integer> values) {
            addCriterion("needCoin in", values, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinNotIn(List<Integer> values) {
            addCriterion("needCoin not in", values, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinBetween(Integer value1, Integer value2) {
            addCriterion("needCoin between", value1, value2, "needcoin");
            return (Criteria) this;
        }

        public Criteria andNeedcoinNotBetween(Integer value1, Integer value2) {
            addCriterion("needCoin not between", value1, value2, "needcoin");
            return (Criteria) this;
        }

        public Criteria andMincoinIsNull() {
            addCriterion("minCoin is null");
            return (Criteria) this;
        }

        public Criteria andMincoinIsNotNull() {
            addCriterion("minCoin is not null");
            return (Criteria) this;
        }

        public Criteria andMincoinEqualTo(Integer value) {
            addCriterion("minCoin =", value, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinNotEqualTo(Integer value) {
            addCriterion("minCoin <>", value, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinGreaterThan(Integer value) {
            addCriterion("minCoin >", value, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinGreaterThanOrEqualTo(Integer value) {
            addCriterion("minCoin >=", value, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinLessThan(Integer value) {
            addCriterion("minCoin <", value, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinLessThanOrEqualTo(Integer value) {
            addCriterion("minCoin <=", value, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinIn(List<Integer> values) {
            addCriterion("minCoin in", values, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinNotIn(List<Integer> values) {
            addCriterion("minCoin not in", values, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinBetween(Integer value1, Integer value2) {
            addCriterion("minCoin between", value1, value2, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMincoinNotBetween(Integer value1, Integer value2) {
            addCriterion("minCoin not between", value1, value2, "mincoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinIsNull() {
            addCriterion("maxCoin is null");
            return (Criteria) this;
        }

        public Criteria andMaxcoinIsNotNull() {
            addCriterion("maxCoin is not null");
            return (Criteria) this;
        }

        public Criteria andMaxcoinEqualTo(Integer value) {
            addCriterion("maxCoin =", value, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinNotEqualTo(Integer value) {
            addCriterion("maxCoin <>", value, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinGreaterThan(Integer value) {
            addCriterion("maxCoin >", value, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinGreaterThanOrEqualTo(Integer value) {
            addCriterion("maxCoin >=", value, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinLessThan(Integer value) {
            addCriterion("maxCoin <", value, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinLessThanOrEqualTo(Integer value) {
            addCriterion("maxCoin <=", value, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinIn(List<Integer> values) {
            addCriterion("maxCoin in", values, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinNotIn(List<Integer> values) {
            addCriterion("maxCoin not in", values, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinBetween(Integer value1, Integer value2) {
            addCriterion("maxCoin between", value1, value2, "maxcoin");
            return (Criteria) this;
        }

        public Criteria andMaxcoinNotBetween(Integer value1, Integer value2) {
            addCriterion("maxCoin not between", value1, value2, "maxcoin");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated do_not_delete_during_merge Wed May 03 17:51:28 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s61.t_activity_coin
     *
     * @mbggenerated Wed May 03 17:51:28 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}